image:
 name: hashicorp/terraform:latest
 entrypoint: [""]

variables:
 AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
 AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}

before_script:
 - apk update --repository=http://dl-cdn.alpinelinux.org/alpine/v3.13/main && apk add --no-cache nodejs npm
 - apk add aws-cli
 - apk add bash
 - apk add npm
 - export PATH="/usr/local/bin:$PATH"

stages:
  - validate
  - plan
  - apply
  - destroy

validate:
 stage: validate
 before_script:
   - apk update && apk add --no-cache nodejs npm
   - npm install -g npm@latest
   - npm ci
 artifacts:
   paths:
    - node_modules/
    - dist/
    - terraform/terraform.tfstate
    - .terraform.lock.hcl
 script:
  - terraform init -backend=false
  - terraform validate
  - npm run build

plan:
 stage: plan
 script:
  - terraform init
  - terraform plan
 artifacts:
  paths:
   - dist/
   - node_modules/
   - terraform/terraform.tfstate
   - .terraform.lock.hcl
 dependencies:
  - validate

apply:
 stage: apply
 before_script:
  - apk update && apk add --no-cache nodejs npm
  - npm install -g npm@latest
  - npm ci
 script:
  - terraform init
  - terraform apply -auto-approve || npm run build
  - npm run build
  - terraform apply -auto-approve || terraform apply -auto-approve
 artifacts:
  paths:
   - .terraform.lock.hcl
   - dist/
   - node_modules/
   - terraform/terraform.tfstate
 only:
  - main

destroy:
 stage: destroy
 script:
  - terraform init
  - terraform destroy -auto-approve
 dependencies:
  - apply
  - plan
 when: manual


